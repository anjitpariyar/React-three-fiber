{"version":3,"sources":["Components/Three/Scene.js","Components/Three/Light.js","Components/Three/Floor.js","App.js","reportWebVitals.js","index.js"],"names":["Model","props","rotate","setRotate","group","useRef","useGLTF","nodes","materials","rotateHer","useSpring","rotation","ref","dispose","onClick","console","log","Math","PI","primitive","object","_rootJoint","castShadow","material","Avatar_Loli_Catalyst_Yaoyao_Mat_Face","geometry","Face_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0","skeleton","Brow_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0","Avatar_Loli_Catalyst_Yaoyao_Mat_Hair","Body_Avatar_Loli_Catalyst_Yaoyao_Mat_Hair_0","Avatar_Loli_Catalyst_Yaoyao_Mat_Body","Body_Avatar_Loli_Catalyst_Yaoyao_Mat_Body_0","Face_Eye_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0","EyeStar_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0","preload","Light","intensity","position","shadow-mapSize-width","window","innerWidth","shadow-mapSize-height","innerHeight","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Floor","receiveShadow","attach","args","opacity","App","useState","softShadows","className","colorManagement","shadowMap","camera","fov","style","height","width","fallback","OrbitControls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc9b5cc4.chunk.js","sourcesContent":["\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei/core/useGLTF'\nimport {useSpring, a} from 'react-spring/three'\n\n\nexport default function Model(props) {\n  const {rotate, setRotate} = props;\n  const group = useRef()\n  const { nodes, materials } = useGLTF('../../../scene.gltf')\n\n  const handleRotate= () => {\n   setRotate(!rotate)\n    console.log(rotate)\n  }\n  const rotateHer = useSpring({\n    rotation: rotate ? [0,0,0] : [0,6,0],\n\n  })\n\n  return (\n    <group ref={group} {...props} dispose={null} onClick={handleRotate}>\n    <group rotation={[-Math.PI / 2, 0, 0]}>\n    <group rotation={[Math.PI / 2, 0, 0]}>\n    <group rotation={[0, 0, 0]}>\n    <group rotation={[0, 0, 0]}>\n    <a.primitive object={nodes._rootJoint}  rotation={rotateHer.rotation}/>\n    <skinnedMesh\n    castShadow\n    material={materials.Avatar_Loli_Catalyst_Yaoyao_Mat_Face}\n    geometry={nodes.Face_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0.geometry}\n    skeleton={nodes.Face_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0.skeleton}\n    />\n    <skinnedMesh\n    castShadow\n    material={materials.Avatar_Loli_Catalyst_Yaoyao_Mat_Face}\n    geometry={nodes.Brow_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0.geometry}\n    skeleton={nodes.Brow_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0.skeleton}\n    />\n    <skinnedMesh\n    castShadow\n    material={materials.Avatar_Loli_Catalyst_Yaoyao_Mat_Hair}\n    geometry={nodes.Body_Avatar_Loli_Catalyst_Yaoyao_Mat_Hair_0.geometry}\n    skeleton={nodes.Body_Avatar_Loli_Catalyst_Yaoyao_Mat_Hair_0.skeleton}\n    />\n    <skinnedMesh\n    castShadow\n    material={materials.Avatar_Loli_Catalyst_Yaoyao_Mat_Body}\n    geometry={nodes.Body_Avatar_Loli_Catalyst_Yaoyao_Mat_Body_0.geometry}\n    skeleton={nodes.Body_Avatar_Loli_Catalyst_Yaoyao_Mat_Body_0.skeleton}\n    />\n    <skinnedMesh\n    castShadow\n    material={materials.Avatar_Loli_Catalyst_Yaoyao_Mat_Face}\n    geometry={nodes.Face_Eye_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0.geometry}\n    skeleton={nodes.Face_Eye_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0.skeleton}\n    />\n    <skinnedMesh\n    material={materials.Avatar_Loli_Catalyst_Yaoyao_Mat_Face}\n    geometry={nodes.EyeStar_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0.geometry}\n    skeleton={nodes.EyeStar_Avatar_Loli_Catalyst_Yaoyao_Mat_Face_0.skeleton}\n    />\n    </group>\n    </group>\n    </group>\n    </group>\n    </group>\n    )\n  }\n  \n  useGLTF.preload('../../../scene.gltf')\n  ","import React from 'react'\r\n\r\nconst Light = () => {\r\n     return (\r\n          <>\r\n          {/* <fog attach=\"fog\" args={['#bbb', 0, 22]} /> */}\r\n          <ambientLight intensity={.4} />\r\n          <directionalLight \r\n               castShadow\r\n               position={[-8,16,-8]}\r\n               intensity={0}\r\n                    shadow-mapSize-width={window.innerWidth}\r\n               shadow-mapSize-height={window.innerHeight}\r\n               shadow-camera-far={50}\r\n               shadow-camera-left={10}\r\n               shadow-camera-right={10}\r\n               shadow-camera-top={10}\r\n               shadow-camera-bottom={-50}\r\n          />\r\n          <pointLight position={[0,50,0]} intensity={2} />\r\n          </>\r\n     )\r\n}\r\n\r\nexport default Light\r\n","import React from 'react'\r\n\r\nconst Floor = () => {\r\n     return (\r\n          <mesh rotation={[-Math.PI/2, 0, 0]} position={[0,-1,0]} receiveShadow>\r\n               <planeBufferGeometry attach=\"geometry\" args={[100,100]} />\r\n               <shadowMaterial attach=\"material\" opacity={1} />\r\n          </mesh>\r\n     )\r\n}\r\n\r\nexport default Floor\r\n","import React, {Suspense, useState} from 'react'\n\nimport './App.css';\n\nimport { Canvas } from 'react-three-fiber'\n\nimport Scene from './Components/Three/Scene'\nimport Light from './Components/Three/Light'\nimport Floor from './Components/Three/Floor'\nimport { softShadows, OrbitControls } from '@react-three/drei'\n\n\nfunction App() {\n\n  const [rotate, setRotate] = useState(false);\n  softShadows()\n  return (\n    <div className=\"App\">\n      \n      <Canvas \n        colorManagement\n        shadowMap\n        camera={{position: [-15,4,1], fov: 10}} \n        style={{ height: '100vh', width: '100vw' }}\n      >\n\n        <Light />\n        <Suspense fallback={null}>\n          <Scene rotate={rotate} setRotate={setRotate}/>\n          <Floor />\n          <OrbitControls  /> \n        </Suspense>\n\n      </Canvas>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}